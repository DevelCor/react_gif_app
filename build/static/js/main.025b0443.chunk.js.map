{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","className","onSubmit","e","preventDefault","trim","length","categories","TextField","id","label","onChange","target","value","autoComplete","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oNAgCeA,EA5BK,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,cAAoB,EACDC,mBAAS,IADR,mBAC/BC,EAD+B,KAClBC,EADkB,KAetC,OACI,sBAAKC,UAAU,mBAAf,UACI,8CACA,sBAAMA,UAAU,eAAeC,SAXlB,SAACC,GAClBA,EAAEC,iBACCL,EAAWM,OAAOC,OAAS,IAC1BT,GAAe,SAACU,GAAD,OAAiBR,GAAjB,mBAAiCQ,OAChDP,EAAc,MAOd,SACI,qBAAKC,UAAU,sBAAf,SACI,cAACO,EAAA,EAAD,CAAWC,GAAG,eAAeC,MAAM,aAAaC,SAjBrC,SAACR,GACxBH,EAAeG,EAAES,OAAOC,QAgBoEC,aAAa,gB,yBCxBpGC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEDI,MAAOF,GAFN,cAEbG,EAFa,gBAGIA,EAAIC,OAHR,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFjB,GAAIiB,EAAIjB,GACRkB,MAAQD,EAAIC,MACZT,IAAG,UAAGQ,EAAIE,cAAP,aAAG,EAAYC,iBAAiBX,QATxB,kBAYZM,GAZY,4CAAH,sDCYLM,G,MAVK,SAAC,GAA2B,IAAD,IAAxBJ,IAAMC,EAAkB,EAAlBA,MAAMT,EAAY,EAAZA,IAE/B,OACI,sBAAKjB,UAAU,QAAf,UACI,qBAAK8B,IAAKb,EAAKc,IAAKL,EAAO1B,UAAU,sCACrC,4BAAI0B,SCaDM,EAjBC,SAAC,GAAgB,IAAfjB,EAAc,EAAdA,SAAc,ECCJ,SAAEA,GAAa,IAAD,EACZlB,mBAAS,CAC/ByB,KAAK,GACLW,SAAU,IAHwB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAXAC,qBAAW,WACPtB,EAAQC,GAAUsB,MAAM,SAACC,GAEjBH,EAAU,CACNb,KAAOgB,EACPL,SAAS,SAItB,CAAClB,IAEGmB,EDfqBK,CAAcxB,GAAlCO,EAFoB,EAEpBA,KAAOW,EAFa,EAEbA,QAEf,OACI,qCACI,6BAAKlB,IACHkB,GAAW,8CACb,qBAAKjC,UAAU,WAAf,SAEYsB,EAAKE,KAAK,SAAAc,GAAI,OAAI,cAAC,EAAD,CAA2Bb,IAAKa,GAAdA,EAAK9B,aEalDgC,EAtBM,WAAO,IAAD,EAEa3C,mBAAS,CAAC,cAFvB,mBAEhBS,EAFgB,KAEJV,EAFI,KAIvB,OACI,sBAAKI,UAAU,cAAf,UACI,cAAC,EAAD,CAAaJ,cAAiBA,IAC9B,uBACA,6BAEQU,EAAWkB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADPA,YCXjC0B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.025b0443.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\nconst AddCategory = ({setCategories }) => {\r\n    const [inputValue , setInputValue] = useState('');\r\n\r\n    const hanndleInputChange = (e) =>{\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault()\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( (categories) => [inputValue , ...categories] )\r\n            setInputValue('')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"search-container\">\r\n            <h2>GifExpertApp</h2>\r\n            <form className=\"add-category\" onSubmit={handleSubmit}>\r\n                <div className=\"form-input-material\">\r\n                    <TextField id=\"filled-basic\" label=\"Search Gif\" onChange={ hanndleInputChange } autoComplete=\"off\"/>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default AddCategory;\r\nAddCategory.propTypes ={\r\n    setCategories : PropTypes.func.isRequired\r\n}","export const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=hpkH4QpJ95oWkGSIaqeGdBHlEKxGD3FY`\r\n    const res = await fetch( url )\r\n    const { data } = await res.json()\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title : img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n    return gifs;\r\n}","import React from 'react';\r\n\r\nconst GifGridItem = ( {img: {title,url} } ) => {\r\n\r\n    return (\r\n        <div className=\"card \">\r\n            <img src={url} alt={title} className=\"animate__animated animate__bounce\"/>\r\n            <p>{title}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import {useFetchGifs} from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    const { data , loading  } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && <p>Cargando data</p> }\r\n            <div className=\"gif-grid\">\r\n                    {\r\n                        data.map( imgs => <GifGridItem key={imgs.id} img={imgs}/> )\r\n                    }\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useState, useEffect} from \"react\";\r\nimport {getGifs} from \"../helpers/getGifs\";\r\nimport 'animate.css';\r\n\r\nexport const useFetchGifs = ( category )=>{\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading : true\r\n    });\r\n    useEffect( ()=>{\r\n        getGifs(category).then( (imgs) => {\r\n            // setTimeout(()=>{\r\n                setState( {\r\n                    data : imgs,\r\n                    loading: false\r\n                });\r\n            // },2000)\r\n        } )\r\n    }, [category] )\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    return (\r\n        <div className=\"counter-app\">\r\n            <AddCategory setCategories = {setCategories} />\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        <GifGrid\r\n                            key={category}\r\n                            category = {category}\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}